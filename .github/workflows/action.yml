name: CI/CD - Tests - SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_FRONT: bobapp-front
  IMAGE_BACK: bobapp-back
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:

  build-and-test:
    name: Build & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---- FRONT ----
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install front-end dependencies
        working-directory: front
        run: npm ci

      - name: Run front-end tests with coverage
        working-directory: front
        run: npm run test -- --watch=false --code-coverage

      - name: Upload front-end coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage

      # ---- BACK ----
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven deps
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Run back-end tests & generate coverage
        working-directory: back
        run: mvn clean verify

      - name: Upload back-end coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco


  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install front dependencies (for lcov)
        working-directory: front
        run: npm ci

      - name: Compile back-end code
        working-directory: back
        run: mvn compile

      - name: Generate back-end coverage (again for sonar)
        working-directory: back
        run: mvn verify

      - name: Run SonarCloud analysis
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          ./sonar-scanner-*/bin/sonar-scanner \
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            


  docker-deploy:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASS }}

      - name: Build & Push Front image
        run: |
          docker build -t $REGISTRY/${{ env.DOCKER_USER }}/${{ env.IMAGE_FRONT }} ./front
          docker push $REGISTRY/${{ env.DOCKER_USER }}/${{ env.IMAGE_FRONT }}

      - name: Build & Push Back image
        run: |
          docker build -t $REGISTRY/${{ env.DOCKER_USER }}/${{ env.IMAGE_BACK }} ./back
          docker push $REGISTRY/${{ env.DOCKER_USER }}/${{ env.IMAGE_BACK }}
